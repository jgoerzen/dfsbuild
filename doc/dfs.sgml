<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
  <!ENTITY index SYSTEM "index/index.sgml">
]>

<book id="dfs">
  <bookinfo>
    <title>Using Debian From Scratch</title>
    <author>
      <firstname>John</firstname> <surname>Goerzen</surname>
    </author>
    <address><email>jgoerzen@complete.org</email></address>
    <legalnotice>
    <para>
        PLEASE NOTE: THIS DOCUMENTATION IS NOT YET ANYWHERE NEAR FINISHED.
    </para>
    <para>
      FIXME: add copyright here
      </para>

    </legalnotice>
  </bookinfo>


  <chapter id="intro">
    <title>Introduction to DFS</title>
    <para>
      Welcome to Debian From Scratch (DFS).  DFS is really two
      systems: 1) a bootable CD for repairing Linux systems or
      installing Debian; and 2) the program that generates the CDs
      that are used for #1.  Most of this manual focuses on #1.
      A wide variety of DFS CDs can be made using the DFS build
      tools.  This manual will refer to CDs made using the default
      configuration.
    </para>
    <sect1 id="features">
      <title>DFS Features</title>
      <indexterm><primary>Features</primary></>
      <para>
	You can expect the following from your DFS CD:
      </para>
      <itemizedlist>
	<listitem><para>Bootable CD featuring the GNU Grub
	    bootloader.  Can be used to boot hard disk partitions even
	    if no hard disk bootloader is present.</para>
	</listitem>
	<listitem><para>Kernel and userland support for all major
	    filesystems, including ext2, ext3, JFS, XFS, ReiserFS,
	    FAT, VFAT, NTFS, ISO9660, CramFS, tmpfs, and more.  Userland support for Reiser4.
	  </para>
	</listitem>
	<listitem><para>Kernel and userland support for different disk
	    layout schemes including standard partitioning, Logical
	    Volume Manager 2 (LVM2), software RAID, etc.
	  </para>
	</listitem>
	<listitem><para>Full recovery tools runnable directly from CD,
	    including:
	  </para>
	  <itemizedlist>
	    <listitem><para>Filesystem utilities for all mazjor filesystems, including undeletion tools for ext2</para>
	    </listitem>
	    <listitem><para>Partition editors (fdisk, cfdisk, parted)</para>
	    </listitem>
	    <listitem><para>Text editors (nano, joe, vim, emacs)</para>
	    </listitem>
	    <listitem><para>C, Perl, Python, and OCaml development
		environments.  Enough to configure and compile a new
		kernel and build basic .debs.  Kernel 2.6.6 sources
              included on CD.</para>
	    </listitem>
	    <listitem><para>Full networking support, including PPP and
		various Ethernet cards and DHCP</para>
	    </listitem>
	    <listitem><para>Network tools including FTP clients, Web
		client, ssh, telnet, NFS, smbclient, tcpdump, netcat, etc.
	      </para>
	    </listitem>
	    <listitem><para>Backup restoration tools such as
		rdiff-backup, dump/restore, tar, cpio, amanda client,
		afbackup client, etc.</para>
	    </listitem>
	    <listitem><para>CD and DVD burning tools</para>
	    </listitem>
	    <listitem><para>Basic printing tools (cat for local
                printers, rlpr for remote ones, and netcat for
                Jetdirect, plus unix2dos for text files and
                Ghostscript for emergency conversions)
              </para>
	    </listitem>
            <listitem><para>Mail reader (mutt)</para>
            </listitem>
          </itemizedlist>
	</listitem>
	<listitem><para>Base systems for multiple versions of Debian
	    installable directly from CD, including: woody (i386),
	    sarge (i386), sid (i386), and sid (amd64).
	  </para>
	</listitem>
        <listitem><para>amd64 support: Enough to install or fix an
            AMD64 system.  Includes 64-bit kernel with 32-bit
            emulation (to run the 32-bit userland on the CD).   Also
            includes 64-bit package for bootstrapping a new AMD64
            support.  In short, you can boot a 64-bit kernel and be
            treated as a first-class citizen in almost all respects.
          </para>
        </listitem>
	<listitem><para>i386 or x86_64 (amd64) kernels bootable
	    directly from initial boot menu.</para>
	</listitem>
	<listitem><para>DFS generation scripts support custom kernels,
	    packages, mirrors, compressed ISO images, and a high
	    degree of flexibility.
	  </para>
	</listitem>
      </itemizedlist>
    </sect1>
  </chapter>

  <chapter id="booting">
    <title>Booting DFS</title>
    <indexterm><primary>Booting</></>
    <para>
      Booting DFS usually is as simple as inserting a CD into the
      drive.  DFS can boot from an IDE or SCSI CD-ROM.  On some
      systems,
      you may need to access your BIOS to enable booting from CD.
      When you have successfully booted DFS the CD, you'll see a blue
      selection screen.
    </para>
    <sect1 id="dfsboot-kernel">
      <title>Booting a Kernel</title>
      <para>
        Depending on how your CD was built, you'll see options for one
        or more different kernel images.  Select one appropriate for
        your system.  If a given image says "amd64", this should only
        be used on amd64 systems such as Opteron or Athlon64 system.
      </para>
    </sect1>
    <sect1 id="dfsboot-selcd">
      <title>Selecting CD-ROM device</title>
      <para>
        In most cases, DFS can automatically detect which drive holds
        your DFS CD.  However, if that check is time-consuming or
        fails, you can manually specify your CD with the
        <command>dfscd</command> parameter.  To use it, select the
        kernel
        you wish, press e to edit the command and edit the "kernel"
        line.  Insert something such as
        <command>dfscd=/dev/hdc</command>, press Enter, then b to
        boot.
      </para>
    </sect1>
    <sect1 id="dfsboot-hardware">
      <title>Detecting Hardware</title>
      <indexterm><primary>Hardware</><secondary>Detecting</></>
      <indexterm><primary>discover</></>
      <indexterm><primary>USB</></>
      <para>
        Some hardware will automatically be configured.  You can
        attempt to autodetect more hardware by running
        <command>/etc/init.d/discover start</command>.  If you want to
        use USB devices, try <command>/etc/init.d/hotplug
          start</command>.  Otherwise, you will likely need to
        manually load kernel modules.  You can find them under
        <filename>/lib/modules/<replaceable>kernelversion</replaceable></filename>.  
        Tools such as <command>lspci</command> can help you find out
        what hardware you have that needs to be loaded.
      </para>
      <para>
        <indexterm><primary>PCMCIA</></>
        If you have PCMCIA devices, run <command>/etc/init.d/pcmcia
          start</command>.
      </para>
    </sect1>

    <sect1 id="ethernet">
      <title>Enabling Ethernet</title>
      <indexterm><primary>Ethernet</><see>Networking, Ethernet</></>
      <indexterm><primary>Networking</><secondary>Ethernet</></>
      <para>
        <indexterm><primary>ifup</primary></indexterm>
        If your network hardware was detected and your LAN uses DHCP,
        you can simply say <command>ifup eth0</command>.  Your network
        will be activated.
      </para>
      <para>
        <indexterm><primary>/etc/network/interfaces</></>
        If your LAN does not use DHCP, you will need to edit
        <filename>/etc/networking/interfaces</filename>.  You should
        delete the eth0 line and replace it with something along these
        lines:</para>
      <screen>
iface eth0 inet static
    address 192.168.0.4
    netmask 255.255.255.0
    gateway 192.168.0.1
      </screen>
      <para>Then run <command>ifup eth0</command>.  You'll also need
        to edit <filename>/etc/resolv.conf</filename> and add a line
        such as <command>nameserver 192.168.0.1</command> to specify
        your nameserver.  (If you run DHCP, this is usually taken care
        of for you, but you may occasionally need to do it anyway.)
      </para>
      <sect2 id="wireless">
        <title>Wireless Networking</title>
        <indexterm><primary>Networking</><secondary>Wireless</></>
        <indexterm><primary>Wireless</><see>Networking, Wireless</></>
        <para>
          If you are using wireless networking, first make sure that
          your hardware is detected.  Sometimes the device name is not
          eth0; if so, figure out what your device is called.  If your
          network is open -- has no encryption -- you should be able
          to enable your wireless device the same as a wired device.
          Otherwise, you will need to modify
          <filename>/etc/network/interfaces</filename> as described in
          the file
          <filename>/usr/share/doc/wireless-tools/README.Debian</filename> on the live DFS system.
        </para>
      </sect2>

    </sect1>
    
    <sect1 id="dfsboot.ppp">
      <title>Dialup with PPP</title>
      <indexterm><primary>PPP</><see>Networking, PPP</></>
      <indexterm><primary>Networking</><secondary>PPP</></>
      <indexterm><primary>Dial-up</><see>Networking, PPP</></>
      <para>
        To dial-up with ppp, first run <command>pppconfig</> to set up
        your access.  Name your connection "provider".  Now, you can
        use
        <command>pon</command> to connect and <command>poff</command>
        to disconnect.
      </para>
    </sect1>
    
  </chapter>

  <chapter id="install">
    <title>Installation</title>
    <para>
      Installation from DFS involves the following general steps:
    </para>
    <orderedlist>
      <listitem><para>Partitioning</para>
      </listitem>
      <listitem><para>Initialize and mount swap</para>
      </listitem>
      <listitem><para>Formatting and Mounting Filesystems</para>
      </listitem>
      <listitem><para>Installing Base System</para>
        <para>You can do this (assuming you have mounted your new
          partitions at /mnt) with: <command>cdebootstrap sid /mnt file:///opt/packages</command>.</para>
      </listitem>
      <listitem><para>Configuring Base System</para>
	<para>You should copy your
	  <filename>/etc/resolv.conf</filename> to the new system.
	  Then, configure its
	  <filename>/etc/apt/sources.list</filename> and
	  <filename>/etc/network/interfaces</filename>.  Then,
	  <filename>chroot /mnt</filename> and:
	</para>
	<orderedlist>
	  <listitem><para><command>apt-get update</command></para>
	  </listitem>
	  <listitem><para><command>apt-get install module-init-tools
		grub ppp</command></para>
	  </listitem>
	  <listitem><para><command>apt-get install</command>
	      appropriate filesystem tools for your chosen filesystem</para>
	  </listitem>
	  <listitem><para><command>mkdir /boot/grub</command></para>
	    <para><command>cp /usr/lib/grub/i386-pc/*
		/boot/grub</command></para>
	  </listitem>
	</orderedlist>
      </listitem>
      <listitem><para>Installing Kernel</para>
	<para>If you like the kernel on the DFS CD, you can do this:
	  <command>cd /mnt/root; dpkg-repack
	    kernel-image-2.6.6</command>.  Then, <command>chroot
	    /mnt</command> and <command>dpkg -i
	    /root/kernel-image-*</command>.
	</para>
      </listitem>
      <listitem><para>Installing Grub</para>
	    <screen>
# grub
grub> root (hd0,0)
grub> setup (hd0)
grub> quit
# update-grub
	    </screen>
      </listitem>
      <listitem><para>Rebooting into new system</para>
      </listitem>
    </orderedlist>
  </chapter>

</book>

<!--
Local Variables:
mode: sgml
sgml-set-face: T
End:

# arch-tag: top-level whole manual file
-->
    
